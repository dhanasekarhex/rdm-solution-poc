name: RDM Solution CI/CD

on:
  push:
    branches:
      - dev

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Install AWS CLI
        run: |
          sudo apt-get update && \
          sudo apt-get install -y awscli
      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install CDK and Dependencies
        run: |
          python -m pip install --upgrade pip && \
          pip install aws-cdk.aws-s3 aws-cdk.aws-lambda aws-cdk.aws-iam boto3
      - name: Install dependencies from requirements.txt
        run: pip install -r requirements.txt
      - name: Deploy dev CDK environment
        run: cdk deploy --all --force --require-approval never
      - name: Sync local files to S3
        run: |
          aws s3 sync ./data s3://scheme-ref-dev-data-copy

      - name: Start Glue Crawler
        run: |
          aws glue start-crawler --name rdm_solution_crawler

      # - name: Wait for Glue Crawler to finish
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: eu-west-2
      #   run: |
      #     stack_name=$(aws cloudformation describe-stack-resources --stack-name my-stack --logical-resource-id GlueStack --query "StackResources[0].PhysicalResourceId" --output text) 
      #     crawler_name=$(aws glue list-crawlers --query "CrawlerNames[?contains(@,\`${stack_name}\`)].[?contains(@,\`rdm_solution_crawler\`)][0]" --output text) 
      #     while [[ $(aws glue get-crawler --name "${crawler_name}" --query "Crawler.State") =~ ^(RUNNING|STOPPING)$ ]]; do sleep 30; done

      - name : Start Glue Job
        env:
          AWS_REGION: eu-west-2
          GLUE_JOB_NAME: glue_job_poc
        run: |
          python -c "import boto3; client = boto3.client('events'); client.put_events(Entries=[{'Source': 'GlueApp', 'DetailType': 'Glue Crawler State Change', 'Detail': '{\"state\":\"SUCCEEDED\",\"crawlerName\":\"rdm_solution_crawler\"}'}])"
